package com.johnyeager.rtrading.rolimonsmonitor.model;

import org.springframework.http.*;
import org.springframework.web.client.RestTemplate;

import java.util.*;


public class DiscordNotifier {

    private static final String WEBHOOK_URL = "https://discord.com/api/webhooks/1408937106214227969/KP21of07hOuADfEuwYsjaTkOwjQyXg6eegRpsXCL9x9HuHqn8wmZB1wF6Xe95IFDO43n";

    public static void sendEmbed(String title, String description, String authorName, String authorUrl, List<String> offeringImgs, List<String> requestingImgs, String tradeUrl) {
        RestTemplate restTemplate = new RestTemplate();

        Map<String, Object> payload = new HashMap<>();

        // Monta embed
        Map<String, Object> embed = new HashMap<>();
        embed.put("title", title);
        embed.put("url", tradeUrl);
        embed.put("description", description);

        // Autor (dono do an√∫ncio)
        Map<String, String> author = new HashMap<>();
        author.put("name", authorName);
        author.put("url", authorUrl);
        embed.put("author", author);

        // Campos
        List<Map<String, Object>> fields = new ArrayList<>();
        fields.add(Map.of("name", "Offering üéÅ", "value", offeringImgs.isEmpty() ? "Nenhum item" : joinImageList(offeringImgs), "inline", false));
        fields.add(Map.of("name", "Requesting üôè", "value", requestingImgs.isEmpty() ? "Nenhum item" : joinImageList(requestingImgs), "inline", false));
        embed.put("fields", fields);

        // Cor azul no embed
        embed.put("color", 3447003);

        payload.put("embeds", List.of(embed));

        // Envia pro Discord
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        HttpEntity<Map<String, Object>> request = new HttpEntity<>(payload, headers);

        restTemplate.postForEntity(WEBHOOK_URL, request, String.class);
    }

    private static String joinImageList(List<String> imgs) {
        StringBuilder sb = new StringBuilder();
        for (String img : imgs) {
            sb.append("[üñºÔ∏è Item](").append(img).append(")\n");
        }
        return sb.toString();
    }
}